services:
  traefik:
    image: traefik:v2.9
    container_name: traefik
    restart: unless-stopped
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    command:
      - --configFile=/etc/traefik/traefik.yml
    ports:
      - "80:80"
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /var/run
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik_configuration.yml:/etc/traefik/traefik.yml
    healthcheck:
      test: [ "CMD", "wget", "-q", "--spider", "http://localhost:8082/ping" ]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M
    networks:
      - traefik-front
      - traefik-back

  frontend:
    build:
      context: ./frontend
      args:
        VUE_APP_API_URL: "${API_PREFIX}/"
    restart: unless-stopped
    cap_drop:
      - ALL
    user: "1000:1000"
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=PathPrefix(`/`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=8080"
    healthcheck:
      test: [ "CMD", "wget", "-q", "--spider", "http://127.0.0.1:8080/" ]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: '0.2'
          memory: 128M
        reservations:
          cpus: '0.1'
          memory: 64M
    networks:
      - traefik-front
    depends_on:
      traefik:
        condition: service_healthy
      backend:
        condition: service_healthy

  backend:
    build:
      context: ./backend
    restart: unless-stopped
    cap_drop:
      - ALL
    user: "1000:1000"
    security_opt:
      - no-new-privileges:true
    read_only: true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=PathPrefix(`${API_PREFIX}`)"
      - "traefik.http.routers.backend.middlewares=strip-api"
      - "traefik.http.services.backend.loadbalancer.server.port=8081"
      - "traefik.http.middlewares.strip-api.stripprefix.prefixes=${API_PREFIX}"
    healthcheck:
      test: [ "CMD", "/healthcheck" ]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: '0.3'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M
    networks:
      - traefik-back
    depends_on:
      traefik:
        condition: service_healthy

networks:
  traefik-front:
    driver: bridge
  traefik-back:
    driver: bridge